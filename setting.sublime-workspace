{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"size",
				"sizeof"
			],
			[
				"gT",
				"gTmp2"
			],
			[
				"g",
				"gSize"
			],
			[
				"a",
				"aidLen"
			],
			[
				"ma",
				"maxPriority"
			],
			[
				"ca",
				"candidateList"
			],
			[
				"EpCo",
				"EpConfigPtr"
			],
			[
				"cofig",
				"epConfigsCount"
			],
			[
				"_fci",
				"_fciIssDataCount"
			],
			[
				"sele",
				"selectetKernelId"
			],
			[
				"is",
				"isAdfNameExist"
			],
			[
				"Fci",
				"FciPtr"
			],
			[
				"b",
				"buffer2"
			],
			[
				"bu",
				"buffer1"
			],
			[
				"pre",
				"prefixLen"
			],
			[
				"p",
				"pSource"
			],
			[
				"Ep",
				"epConfigs"
			],
			[
				"EpCon",
				"EpConfigPtr"
			],
			[
				"MAX",
				"MAX_ISSDATA"
			],
			[
				"MAX_",
				"MAX_4F_LEN"
			],
			[
				"in",
				"index"
			],
			[
				"epC",
				"epConfigs"
			],
			[
				"expected4F_",
				"expected4F_1"
			],
			[
				"EX",
				"EXPECT_EQ"
			],
			[
				"eX",
				"EXPECT_EQ"
			],
			[
				"pri",
				"printFci"
			],
			[
				"pr",
				"printFci"
			],
			[
				"si",
				"size"
			],
			[
				"_",
				"_4FData"
			],
			[
				"gS",
				"gSize"
			],
			[
				"_9F2",
				"_9F2A"
			],
			[
				"e",
				"expected4F"
			],
			[
				"v",
				"value"
			],
			[
				"con",
				"constructed"
			],
			[
				"pp",
				"ppseResponse"
			],
			[
				"de",
				"deadBabe"
			],
			[
				"ex",
				"expectedValue84"
			],
			[
				"_fciIssDataC",
				"_fciIssDataCount"
			],
			[
				"E",
				"EXPECT_EQ"
			],
			[
				"NULL",
				"NULL_PARAMETER"
			],
			[
				"un",
				"unsigned"
			],
			[
				"_fc",
				"_fciIssDataCount"
			],
			[
				"IN",
				"INDEX_OUT_OF_RANGE"
			],
			[
				"0x9F",
				"0x9F2A"
			],
			[
				"_4F",
				"_4FData"
			],
			[
				"Can",
				"CandidateListItem"
			],
			[
				"Ca",
				"CandidateListItemPtr"
			],
			[
				"MA",
				"MAX_CANDIDATE_LIST"
			],
			[
				"CAN",
				"CANDLIST_DFNAME_BIT"
			],
			[
				"S",
				"Step3"
			],
			[
				"Ste",
				"StepExit"
			],
			[
				"St",
				"Step1"
			],
			[
				"Step",
				"Step2"
			],
			[
				"indi",
				"Indicators"
			],
			[
				"re",
				"return"
			],
			[
				"EpO",
				"EpOutcomePtr"
			],
			[
				"o",
				"outcome"
			],
			[
				"ui",
				"uiRequestOnRestartPresent"
			],
			[
				"uiR",
				"uiRequestOnOutcomePresent"
			],
			[
				"on",
				"onlineResponseDataLen"
			],
			[
				"Ou",
				"OutcomeStartTypes"
			],
			[
				"ep",
				"epConfigs"
			],
			[
				"_3",
				"_3_1_1_5"
			],
			[
				"ONL",
				"ONLINE_CRYPT_REQ_BIT"
			],
			[
				"ON",
				"ONLINE_CRYPT_REQ_BYTE"
			],
			[
				"co",
				"configData"
			],
			[
				"SET_EXIST_CL",
				"SET_EXIST_CLESS_FLOOR_LIMIT"
			],
			[
				"SET_E",
				"SET_EXIST_TERM_FLOOR_LIMIT"
			],
			[
				"SET_EXI",
				"SET_EXIST_ZERO_AMOUNT_ALLOWED"
			],
			[
				"EXTEN",
				"SET_EXTENDED_SELECTION_SUPP"
			],
			[
				"ZERO",
				"SET_ZERO_AMOUT_ALLOWED"
			],
			[
				"IS",
				"IS_EXIST_CLESS_FLOOR_LIMIT"
			],
			[
				"am",
				"amountAuthorized"
			],
			[
				"amount",
				"amountAuthorized"
			],
			[
				"c",
				"config"
			],
			[
				"CV",
				"CVM_REQ_BIT"
			],
			[
				"CVM",
				"CVM_REQ_BYTE"
			],
			[
				"EXP",
				"EXPECT_FALSE"
			],
			[
				"epco",
				"epConfigs"
			],
			[
				"amo",
				"amountAuthorized"
			],
			[
				"confg",
				"configData"
			],
			[
				"epCon",
				"epConfigsCount"
			],
			[
				"TES",
				"TEST_AID_AB"
			],
			[
				"NUL",
				"NULL_PARAMETER"
			],
			[
				"ret",
				"retVal"
			],
			[
				"_g",
				"_genUnPredNum"
			],
			[
				"ch",
				"checkHalInterfaces"
			],
			[
				"epcon",
				"epConfigsCount"
			],
			[
				"Epcon",
				"EpConfigData"
			],
			[
				"NU",
				"NULL_PARAMETER"
			],
			[
				"I",
				"INDEX_OUT_OF_RANGE"
			],
			[
				"EpConfig",
				"EpConfigs"
			],
			[
				"EpC",
				"EpConfigsPtr"
			],
			[
				"def",
				"defaultRelease"
			],
			[
				"par",
				"parseEpconfig"
			],
			[
				"add",
				"addConfigByAidKid"
			],
			[
				"ai",
				"aidFlag"
			],
			[
				"inc",
				"include"
			],
			[
				"gsA",
				"gsAidKidIndex"
			],
			[
				"gsEp",
				"gsEpConfigIndex"
			],
			[
				"gs",
				"gsEpConfigIndex"
			],
			[
				"A",
				"Aid_KidPtr"
			],
			[
				"Ai",
				"Aid_KidPtr"
			],
			[
				"Test",
				"TestEpConfig"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <stdlib.h>\n#include \"./epCombinationSelection.h\"\n#include \"./epIndicators.h\"\n#include \"../Base/err.h\"\n#include \"../Base/general.h\"\n\n\nstatic Steps                gsNextStep;\nstatic CandidateListItem    gsSelectedApp;\n//-----------------------------------------------------------------------------\n\nint epCombinationSelection(EpPtr pEp)\n{\n    if (!pEp) return NULL_PARAMETER;\n    int err;\n\n    gsNextStep = Step1;\n\n    while(gsNextStep != StepExit) {\n        switch(gsNextStep) {\n            case Step1:\n                err = _step1(pEp);\n            break;\n            case Step2:\n                err = _step2(pEp);\n            break;\n            case Step3:\n                err = _step3(pEp);\n            break;\n        }\n    }\n    return err;\n}\n\n/*---------------------------------------------\n    Book B v2.5 p.32\n    3.3.3\n    \n*/\n\nint epFinalCombinationSelection(EpPtr pEp) \n{\n    /*\n        Book B v2.5 p.32\n        3.3.3.1\n\n        If there is only one Combination in the Candidate List,\n        then Entry Point shall select the Combination.\n    */\n    if (pEp->candidateListCount == 1) {\n\n    }\n    else if (pEp->candidateListCount > 1) {\n        int i              = 0;\n        int maxPriority    = 0;\n        int curentPriority = 0;\n        for (i = 0; i < pEp->candidateListCount; ++i) {\n            curentPriority =  getApplicationPriority(&(pEp->candidateList[i]));\n            if (curentPriority > maxPriority) {\n                gsSelectedApp = pEp->candidateList[i];\n                maxPriority = curentPriority;\n            }\n        }\n\n        int err = se\n    }\n\n}\n\n//-----------------------------------------------------------------------------\n\nint _step1(EpPtr pEp)\n{\n    if (!pEp) return NULL_PARAMETER;\n\n    int i = 0;\n    int err = selectPpse(&(pEp->fci));\n    if (err != SUCCESS) return err;\n    if (getLastSw() == MAKEWORD(0x90, 0x00)) {\n        clearCandidateList(pEp->candidateList, MAX_CANDIDATE_LIST);\n        CandidateListItem item;\n        for(i = 0; i < pEp->fci._fciIssDataCount; ++i) {\n            fciToCandidateItem(&(pEp->fci._fciIssData[i]), &item);\n            addCandidateList(pEp->candidateList,\n                            &(pEp->candidateListCount),\n                            MAX_CANDIDATE_LIST,\n                            &item);\n        }\n        gsNextStep = Step2;\n    }\n    else {\n        gsNextStep = Step3;\n    }\n    return err;\n}\n\n//-----------------------------------------------------------------------------\n\nint _step2(EpPtr pEp) \n{\n    int err = SUCCESS;\n    if (!pEp) return NULL_PARAMETER;\n\n    /*\n        Book B v2.5 p.27\n        3.3.2.4\n\n        IF      there is no Directory Entry (Tag '61') in the FCI,\n        THEN    Entry Point shall add no Combinations to the Candidate List\n                and shall proceed to Step 3.\n    */\n    if (pEp->fci._fciIssDataCount == 0) {\n        gsNextStep = Step3;\n    }\n\n    /*\n        Book B v2.5 p.27\n        3.3.2.5\n\n    */\n    int i = 0;\n    int j = 0;\n    EpConfigPtr pConfig = NULL;\n    unsigned char matchingAid[30] = {0x00};\n    int selectetKernelId = 0;\n\n    for (i = 0; i < pEp->epConfigsCount; ++i) {\n        pConfig = &(pEp->epConfigs[i]);\n        if (!IS_EPIND_CLESS_APP_NOT_ALLOWED(pConfig->indicators)) {\n            for (j = 0; j < pEp->fci._fciIssDataCount; ++j) {\n                //---------------------\n                // Ref: A\n                if (!isAdfNameExist(&(pEp->fci), j) ||\n                    !isAdfNameValid(&(pEp->fci), j)) {\n                    continue;\n\n                }\n\n                //---------------------\n                // Ref: B\n                if ((getAdfNameLen(&(pEp->fci), j) == getEpConfigAidLen(pConfig)) ||\n                    startsWith(getAdfName(&(pEp->fci), j),\n                               pConfig->aid) == TRUE) {\n                    strncpy(matchingAid, pConfig->aid, getEpConfigAidLen(pConfig));\n                }\n                else {\n                    continue;\n                }\n\n                //---------------------\n                // Ref: C\n                if (!isKernelIdExist(&(pEp->fci), j)) {\n                }\n                else {\n\n                }\n            }\n            gsNextStep = Step3;\n        }\n    }\n    return err;\n}\n\n//-----------------------------------------------------------------------------\n\nint _step3(EpPtr pEp) \n{\n    int err = SUCCESS;\n    if (!pEp) return NULL_PARAMETER;\n    return err;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_1_1()\n{\n    /*\n        Book B v2.5 p.22\n        3.3.1.1\n\n        The coding of the Application Priority Indicator is indicated in Table 3-3.\n        \n        IF      The Application Priority Indicator is absent from a Directory Entry,\n        THEN    Entry Point shall assume b4-b1 to have a value of 0000b.    \n    */\n\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_1(EpPtr pEp)\n{\n    /*\n        Book B v2.5 p.26\n        3.3.2.1\n\n        IF      Entry Point is activated by the reader at Start B,\n        THEN:\n            -   IF       Issuer Authentication Data and/or Issuer Script is present,\n                THEN     processing shall continue at requirement 3.3.3.3 of Final\n                         Combination Selection with the Combination that was\n                         selected during the previous Final Combination Selection.\n            - OTHERWISE, Entry Point shall perform steps 1 to 3.\n\n        ELSE IF Entry Point is activated by the reader at Start C,\n        THEN    processing shall continue at Step 3.\n    */\n    if (!pEp) return NULL_PARAMETER;\n\n    if (pEp->startedByReader) {\n\n    }\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_2(EpPtr pEp)\n{\n    if (!pEp) return NULL_PARAMETER;\n\n    int err = selectPpse(&(pEp->fci));\n\n    return err;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_3()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_4()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_5()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_6()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_2_7()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_1()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_2()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_3()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_4()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_5()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_6()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint _3_3_3_7()\n{\n    return SUCCESS;\n}\n\n//-----------------------------------------------------------------------------\n\nint t_getNextStep() \n{\n    return gsNextStep;\n}\n\nvoid t_setNextStep(Steps s) \n{\n    gsNextStep = s;\n}",
			"file": "src/EntryPoint/epCombinationSelection.c",
			"file_size": 7524,
			"file_write_time": 130799238191749484,
			"settings":
			{
				"buffer_size": 7536,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/utils.h",
			"settings":
			{
				"buffer_size": 596,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/utils.c",
			"settings":
			{
				"buffer_size": 2857,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/fci.h",
			"settings":
			{
				"buffer_size": 1597,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/fci.c",
			"settings":
			{
				"buffer_size": 4183,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EntryPoint/epCommon.h",
			"settings":
			{
				"buffer_size": 2746,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/candidateList.h",
			"settings":
			{
				"buffer_size": 1675,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/select.h",
			"settings":
			{
				"buffer_size": 761,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/Base/selectTests.h",
			"settings":
			{
				"buffer_size": 15740,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/select.c",
			"settings":
			{
				"buffer_size": 4360,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/candidateList.c",
			"settings":
			{
				"buffer_size": 1744,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EntryPoint/epConfig.h",
			"settings":
			{
				"buffer_size": 7167,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EntryPoint/epConfig.c",
			"settings":
			{
				"buffer_size": 9628,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Base/kernels.h",
			"settings":
			{
				"buffer_size": 520,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/Base/utilsTests.h",
			"settings":
			{
				"buffer_size": 1549,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "make",
	"build_system_choices":
	[
		[
			[
				[
					"make",
					""
				],
				[
					"make",
					"cmake"
				]
			],
			[
				"make",
				"cmake"
			]
		],
		[
			[
				[
					"make",
					""
				],
				[
					"make",
					"cmake"
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "inst",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Git: Sta",
				"Git: Status"
			],
			[
				"Git: St",
				"Git: Status"
			],
			[
				"GDB",
				"SublimeGDB: Start Debugging"
			],
			[
				"Set ",
				"Set Syntax: JSON"
			],
			[
				"make",
				"Set Syntax: CMakeEditor"
			],
			[
				"mak",
				"Build With: make"
			],
			[
				"Gdb",
				"SublimeGDB: Stop Debugging"
			],
			[
				"Git: Stat",
				"Git: Status"
			],
			[
				"git",
				"Git: Status"
			],
			[
				"cmak",
				"Build With: make - cmake"
			],
			[
				"Subli",
				"SublimeGDB: Start Debugging"
			],
			[
				"Sub",
				"SublimeGDB: Start Debugging"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"cma",
				"Build With: make - cmake"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/suyuti/projects/sil/sskernel",
		"/home/suyuti/projects/sil/sskernel/build",
		"/home/suyuti/projects/sil/sskernel/src",
		"/home/suyuti/projects/sil/sskernel/src/Base",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint",
		"/home/suyuti/projects/sil/sskernel/test",
		"/home/suyuti/projects/sil/sskernel/test/Base",
		"/home/suyuti/projects/sil/sskernel/test/EntryPoint",
		"/home/suyuti/projects/sil/sskernel/test/Runner2"
	],
	"file_history":
	[
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epConfig.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epConfig.c",
		"/home/suyuti/projects/sil/sskernel/src/Base/select.h",
		"/home/suyuti/projects/sil/sskernel/test/Runner2/main.cpp",
		"/home/suyuti/projects/sil/sskernel/test/EntryPoint/epCombinationSelectionTests.h",
		"/home/suyuti/projects/sil/sskernel/test/Base/selectTests.h",
		"/home/suyuti/.config/sublime-text-3/Packages/User/Base File.sublime-settings",
		"/home/suyuti/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epOutcome.c",
		"/home/suyuti/projects/sil/sskernel/Readme.md",
		"/home/suyuti/projects/sil/sskernel/src/Base/debug.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/candidateList.c",
		"/home/suyuti/projects/sil/sskernel/src/Base/fci.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/utils.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/utils.c",
		"/home/suyuti/projects/sil/sskernel/test/Base/utilsTests.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/fci.c",
		"/home/suyuti/projects/sil/sskernel/src/CMakeLists.txt",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epCombinationSelection.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epCombinationSelection.c",
		"/home/suyuti/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/suyuti/projects/sil/sskernel/src/Base/select.c",
		"/home/suyuti/projects/sil/sskernel/src/Base/tlv.c",
		"/home/suyuti/projects/sil/sskernel/src/Base/candidateList.h",
		"/home/suyuti/.config/sublime-text-3/Packages/Alignment/Default (Linux).sublime-keymap",
		"/home/suyuti/.config/sublime-text-3/Packages/User/C++.sublime-settings",
		"/home/suyuti/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/suyuti/projects/sil/sskernel/src/Base/general.h",
		"/home/suyuti/projects/sil/sskernel/setting.sublime-project",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epTrnxParameters.c",
		"/home/suyuti/.config/sublime-text-3/Packages/User/SublimeGDB.sublime-settings",
		"/home/suyuti/.config/sublime-text-3/Packages/SublimeGDB/SublimeGDB.sublime-settings",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epPreProcessing.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epPreProcessing.c",
		"/home/suyuti/Desktop/linux.cfg",
		"/home/suyuti/projects/sil/sskernel/test/Base/candidateListTests.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/debug.c",
		"/home/suyuti/projects/sil/sskernel/src/gmon.out",
		"/home/suyuti/.config/sublime-text-3/Packages/User/Uncrustify.sublime-settings",
		"/home/suyuti/.config/sublime-text-3/Packages/Uncrustify/Uncrustify.sublime-settings",
		"/home/suyuti/projects/sil/sskernel/src/Base/err.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epCommon.h",
		"/home/suyuti/projects/sil/sskernel/test/BaseTest.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/base.h",
		"/home/suyuti/projects/sil/sskernel/src/Hal/hal.h",
		"/home/suyuti/projects/sil/sskernel/test/EntryPoint/Test_2EA_002_00.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/baseCommon.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epProtocolActivation.h",
		"/home/suyuti/projects/sil/sskernel/test/CMakeLists.txt",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/ttq.h",
		"/home/suyuti/projects/sil/sskernel/test/EntryPoint/epPreProcessingTests.h",
		"/home/suyuti/projects/sil/sskernel/CMakeLists.txt",
		"/home/suyuti/projects/sil/sskernel/test/EntryPoint/Test_2EA_001_00_01.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epIndicators.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epProtocolActivation.c",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/entryPoint.c",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epOutcome.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epConfigHelper.c",
		"/home/suyuti/projects/sil/sskernel/src/Base/bits.h",
		"/home/suyuti/projects/sil/sskernel/TODO.txt",
		"/home/suyuti/projects/sil/sskernel/test/EntryPoint/epConfigTests.h",
		"/home/suyuti/projects/sil/sskernel/src/Base/kernel.c",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/entryPoint.h",
		"/home/suyuti/projects/sil/sskernel/src/EntryPoint/epIndicators.c",
		"/home/suyuti/projects/sil/sskernel/test/BaseTest.cpp",
		"/home/suyuti/projects/sil/sskernel/test/defaultHalImpl.c",
		"/home/suyuti/projects/sil/sskernel/src/Base/kernel.h",
		"/home/suyuti/projects/sil/sskernel/test/Config/ConfigFactory/configFactory.h",
		"/home/suyuti/projects/sil/sskernel/test/defaultHalImpl.h",
		"/home/suyuti/projects/sil/sskernel/test/Config/Configurations/termsetting1/config.txt",
		"/home/suyuti/projects/sil/sskernel/test/Runner2/CMakeLists.txt"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"fci",
			"config"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/EntryPoint/epCombinationSelection.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7536,
						"regions":
						{
						},
						"selection":
						[
							[
								1582,
								1582
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1104.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Base/utils.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 596,
						"regions":
						{
						},
						"selection":
						[
							[
								341,
								341
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Base/utils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2857,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Base/fci.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1597,
						"regions":
						{
						},
						"selection":
						[
							[
								1126,
								1126
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 594.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Base/fci.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4183,
						"regions":
						{
						},
						"selection":
						[
							[
								4180,
								4180
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2641.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "src/EntryPoint/epCommon.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2746,
						"regions":
						{
						},
						"selection":
						[
							[
								2122,
								2122
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1449.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/Base/candidateList.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1675,
						"regions":
						{
						},
						"selection":
						[
							[
								492,
								492
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 138.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/Base/select.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 761,
						"regions":
						{
						},
						"selection":
						[
							[
								367,
								367
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 252.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "test/Base/selectTests.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15740,
						"regions":
						{
						},
						"selection":
						[
							[
								15543,
								15543
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9963.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Base/select.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4360,
						"regions":
						{
						},
						"selection":
						[
							[
								1269,
								1269
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 801.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/Base/candidateList.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1744,
						"regions":
						{
						},
						"selection":
						[
							[
								1499,
								1499
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/EntryPoint/epConfig.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7167,
						"regions":
						{
						},
						"selection":
						[
							[
								334,
								334
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/EntryPoint/epConfig.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9628,
						"regions":
						{
						},
						"selection":
						[
							[
								6148,
								6148
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4458.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Base/fci.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1597,
						"regions":
						{
						},
						"selection":
						[
							[
								1428,
								1428
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 276.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/Base/fci.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4183,
						"regions":
						{
						},
						"selection":
						[
							[
								3472,
								3472
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2480.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/Base/kernels.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 520,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "test/Base/utilsTests.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1549,
						"regions":
						{
						},
						"selection":
						[
							[
								786,
								786
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 751.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.396981627296,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 330.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git-commit":
	{
		"height": 112.0
	},
	"pinned_build_system": "make",
	"project": "setting.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debug",
				"src/Base/debug.h"
			],
			[
				"err.",
				"src/Base/err.h"
			],
			[
				"hal.",
				"src/Hal/hal.h"
			],
			[
				"ttq.",
				"src/EntryPoint/ttq.h"
			],
			[
				"eppre",
				"src/EntryPoint/epPreProcessing.c"
			],
			[
				"epin",
				"src/EntryPoint/epIndicators.h"
			],
			[
				"epout",
				"src/EntryPoint/epOutcome.c"
			],
			[
				"epco",
				"src/EntryPoint/epConfig.c"
			],
			[
				"epcon",
				"src/EntryPoint/epConfig.h"
			],
			[
				"ttq",
				"src/EntryPoint/ttq.h"
			],
			[
				"err",
				"src/Base/err.h"
			],
			[
				"entr",
				"src/EntryPoint/entryPoint.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 331.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
